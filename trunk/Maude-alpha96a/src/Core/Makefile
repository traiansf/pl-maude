# Makefile.in generated by automake 1.10 from Makefile.am.
# src/Core/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





pkgdatadir = $(datadir)/Maude
pkglibdir = $(libdir)/Maude
pkgincludedir = $(includedir)/Maude
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
subdir = src/Core
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in ChangeLog
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)
AR = ar
ARFLAGS = cru
libcore_a_AR = $(AR) $(ARFLAGS)
libcore_a_LIBADD =
am_libcore_a_OBJECTS = libcore_a-memoryCell.$(OBJEXT) \
	libcore_a-rhsBuilder.$(OBJEXT) libcore_a-termBag.$(OBJEXT) \
	libcore_a-bindingLhsAutomaton.$(OBJEXT) \
	libcore_a-trivialRhsAutomaton.$(OBJEXT) \
	libcore_a-copyRhsAutomaton.$(OBJEXT) \
	libcore_a-variableInfo.$(OBJEXT) \
	libcore_a-narrowingVariableInfo.$(OBJEXT) \
	libcore_a-termSet.$(OBJEXT) libcore_a-strategy.$(OBJEXT) \
	libcore_a-sortTable.$(OBJEXT) \
	libcore_a-sortConstraintTable.$(OBJEXT) \
	libcore_a-equationTable.$(OBJEXT) \
	libcore_a-ruleTable.$(OBJEXT) libcore_a-sort.$(OBJEXT) \
	libcore_a-connectedComponent.$(OBJEXT) \
	libcore_a-module.$(OBJEXT) libcore_a-substitution.$(OBJEXT) \
	libcore_a-localBinding.$(OBJEXT) \
	libcore_a-subproblemSequence.$(OBJEXT) \
	libcore_a-subproblemDisjunction.$(OBJEXT) \
	libcore_a-sortCheckSubproblem.$(OBJEXT) \
	libcore_a-disjunctiveSubproblemAccumulator.$(OBJEXT) \
	libcore_a-preEquation.$(OBJEXT) libcore_a-equation.$(OBJEXT) \
	libcore_a-rule.$(OBJEXT) libcore_a-sortConstraint.$(OBJEXT) \
	libcore_a-rewritingContext.$(OBJEXT) \
	libcore_a-variableAbstractionSubproblem.$(OBJEXT) \
	libcore_a-equalitySubproblem.$(OBJEXT) \
	libcore_a-dagRoot.$(OBJEXT) libcore_a-cachedDag.$(OBJEXT) \
	libcore_a-extensionMatchSubproblem.$(OBJEXT) \
	libcore_a-dagNodeSet.$(OBJEXT) libcore_a-hashConsSet.$(OBJEXT) \
	libcore_a-memoTable.$(OBJEXT) libcore_a-memoMap.$(OBJEXT) \
	libcore_a-rootContainer.$(OBJEXT) libcore_a-sortBdds.$(OBJEXT) \
	libcore_a-unificationContext.$(OBJEXT) \
	libcore_a-protectedDagNodeSet.$(OBJEXT) \
	libcore_a-pendingUnificationStack.$(OBJEXT) \
	libcore_a-unificationSubproblemDisjunction.$(OBJEXT) \
	libcore_a-compoundCycleSubproblem.$(OBJEXT)
libcore_a_OBJECTS = $(am_libcore_a_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SOURCES = $(libcore_a_SOURCES)
DIST_SOURCES = $(libcore_a_SOURCES)
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/andrei/Maude-alpha96a/missing --run aclocal-1.10
AMTAR = ${SHELL} /home/andrei/Maude-alpha96a/missing --run tar
AUTOCONF = ${SHELL} /home/andrei/Maude-alpha96a/missing --run autoconf
AUTOHEADER = ${SHELL} /home/andrei/Maude-alpha96a/missing --run autoheader
AUTOMAKE = ${SHELL} /home/andrei/Maude-alpha96a/missing --run automake-1.10
AWK = mawk
BISON = bison
BUDDY_LIB = -lbdd
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -Wall -O2 -fomit-frame-pointer -fforce-addr -finline-limit=10000 -mpreferred-stack-boundary=4 
CPPFLAGS = -I/home/andrei/pl-maude/local/include
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -Wall -O2 -fomit-frame-pointer -fforce-addr -finline-limit=10000 -mpreferred-stack-boundary=4 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FLEX = flex
GMP_LIBS = -lgmpxx -lgmp
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = -static -L/home/andrei/pl-maude/local/lib
LIBOBJS = 
LIBS = -lnsl 
LIBSIGSEGV_LIB = -lsigsegv
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/andrei/Maude-alpha96a/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = Maude
PACKAGE_BUGREPORT = maude-bugs@maude.cs.uiuc.edu
PACKAGE_NAME = Maude
PACKAGE_STRING = Maude alpha96a
PACKAGE_TARNAME = maude
PACKAGE_VERSION = alpha96a
PATH_SEPARATOR = :
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
TECLA_LIBS = -ltecla -lcurses
VERSION = alpha96a
abs_builddir = /home/andrei/Maude-alpha96a/src/Core
abs_srcdir = /home/andrei/Maude-alpha96a/src/Core
abs_top_builddir = /home/andrei/Maude-alpha96a
abs_top_srcdir = /home/andrei/Maude-alpha96a
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /home/andrei/Maude-alpha96a/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_builddir = ../..
top_srcdir = ../..
noinst_LIBRARIES = libcore.a
libcore_a_CPPFLAGS = \
	-I$(top_srcdir)/src/Utility \
	-I$(top_srcdir)/src/Interface \
	-I$(top_srcdir)/src/Variable \
	-I$(top_srcdir)/src/FullCompiler

libcore_a_SOURCES = \
	memoryCell.cc \
	rhsBuilder.cc \
	termBag.cc \
	bindingLhsAutomaton.cc \
	trivialRhsAutomaton.cc \
	copyRhsAutomaton.cc \
	variableInfo.cc \
	narrowingVariableInfo.cc \
	termSet.cc \
	strategy.cc \
	sortTable.cc \
	sortConstraintTable.cc \
	equationTable.cc \
	ruleTable.cc \
	sort.cc \
	connectedComponent.cc \
	module.cc \
	substitution.cc \
	localBinding.cc \
	subproblemSequence.cc \
	subproblemDisjunction.cc \
	sortCheckSubproblem.cc \
	disjunctiveSubproblemAccumulator.cc \
	preEquation.cc \
	equation.cc \
	rule.cc \
	sortConstraint.cc \
	rewritingContext.cc \
	variableAbstractionSubproblem.cc \
	equalitySubproblem.cc \
	dagRoot.cc \
	cachedDag.cc \
	extensionMatchSubproblem.cc \
	dagNodeSet.cc \
	hashConsSet.cc \
	memoTable.cc \
	memoMap.cc \
	rootContainer.cc \
	sortBdds.cc \
	unificationContext.cc \
	protectedDagNodeSet.cc \
	pendingUnificationStack.cc \
	unificationSubproblemDisjunction.cc \
	compoundCycleSubproblem.cc

EXTRA_DIST = \
	run.cc \
	ctorDiagram.cc \
	sortErrorAnalysis.cc

noinst_HEADERS = \
	argVec.hh \
	argumentIterator.hh \
	badFlag.hh \
	bindingLhsAutomaton.hh \
	cachedDag.hh \
	checkedArgVecConstIterator.hh \
	checkedArgVecIterator.hh \
	conditionFragment.hh \
	conditionState.hh \
	connectedComponent.hh \
	copyRhsAutomaton.hh \
	core.hh \
	dagArgumentIterator.hh \
	dagNodeSet.hh \
	hashConsSet.hh \
	dagRoot.hh \
	disjunctiveSubproblemAccumulator.hh \
	equalitySubproblem.hh \
	equation.hh \
	equationTable.hh \
	extensionMatchSubproblem.hh \
	label.hh \
	lineNumber.hh \
	localBinding.hh \
	memoTable.hh \
	memoMap.hh \
	memoryCell.hh \
	module.hh \
	moduleItem.hh \
	namedEntity.hh \
	opDeclaration.hh \
	preEquation.hh \
	rawRootContainer.hh \
	redexPosition.hh \
	rewritingContext.hh \
	rhsBuilder.hh \
	rootContainer.hh \
	rule.hh \
	ruleTable.hh \
	simpleRootContainer.hh \
	sort.hh \
	sortBdds.hh \
	sortCheckSubproblem.hh \
	sortConstraint.hh \
	sortConstraintTable.hh \
	sortTable.hh \
	strategy.hh \
	subproblemAccumulator.hh \
	subproblemDisjunction.hh \
	subproblemSequence.hh \
	substitution.hh \
	symbolMap.hh \
	termBag.hh \
	termSet.hh \
	trivialRhsAutomaton.hh \
	variableAbstractionSubproblem.hh \
	variableInfo.hh \
	narrowingVariableInfo.hh \
	unificationContext.hh \
	freshVariableGenerator.hh \
	protectedDagNodeSet.hh \
	pendingUnificationStack.hh \
	environment.hh \
	unificationSubproblemDisjunction.hh \
	compoundCycleSubproblem.hh

all: all-am

.SUFFIXES:
.SUFFIXES: .cc .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Core/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Core/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libcore.a: $(libcore_a_OBJECTS) $(libcore_a_DEPENDENCIES) 
	-rm -f libcore.a
	$(libcore_a_AR) libcore.a $(libcore_a_OBJECTS) $(libcore_a_LIBADD)
	$(RANLIB) libcore.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libcore_a-bindingLhsAutomaton.Po
include ./$(DEPDIR)/libcore_a-cachedDag.Po
include ./$(DEPDIR)/libcore_a-compoundCycleSubproblem.Po
include ./$(DEPDIR)/libcore_a-connectedComponent.Po
include ./$(DEPDIR)/libcore_a-copyRhsAutomaton.Po
include ./$(DEPDIR)/libcore_a-dagNodeSet.Po
include ./$(DEPDIR)/libcore_a-dagRoot.Po
include ./$(DEPDIR)/libcore_a-disjunctiveSubproblemAccumulator.Po
include ./$(DEPDIR)/libcore_a-equalitySubproblem.Po
include ./$(DEPDIR)/libcore_a-equation.Po
include ./$(DEPDIR)/libcore_a-equationTable.Po
include ./$(DEPDIR)/libcore_a-extensionMatchSubproblem.Po
include ./$(DEPDIR)/libcore_a-hashConsSet.Po
include ./$(DEPDIR)/libcore_a-localBinding.Po
include ./$(DEPDIR)/libcore_a-memoMap.Po
include ./$(DEPDIR)/libcore_a-memoTable.Po
include ./$(DEPDIR)/libcore_a-memoryCell.Po
include ./$(DEPDIR)/libcore_a-module.Po
include ./$(DEPDIR)/libcore_a-narrowingVariableInfo.Po
include ./$(DEPDIR)/libcore_a-pendingUnificationStack.Po
include ./$(DEPDIR)/libcore_a-preEquation.Po
include ./$(DEPDIR)/libcore_a-protectedDagNodeSet.Po
include ./$(DEPDIR)/libcore_a-rewritingContext.Po
include ./$(DEPDIR)/libcore_a-rhsBuilder.Po
include ./$(DEPDIR)/libcore_a-rootContainer.Po
include ./$(DEPDIR)/libcore_a-rule.Po
include ./$(DEPDIR)/libcore_a-ruleTable.Po
include ./$(DEPDIR)/libcore_a-sort.Po
include ./$(DEPDIR)/libcore_a-sortBdds.Po
include ./$(DEPDIR)/libcore_a-sortCheckSubproblem.Po
include ./$(DEPDIR)/libcore_a-sortConstraint.Po
include ./$(DEPDIR)/libcore_a-sortConstraintTable.Po
include ./$(DEPDIR)/libcore_a-sortTable.Po
include ./$(DEPDIR)/libcore_a-strategy.Po
include ./$(DEPDIR)/libcore_a-subproblemDisjunction.Po
include ./$(DEPDIR)/libcore_a-subproblemSequence.Po
include ./$(DEPDIR)/libcore_a-substitution.Po
include ./$(DEPDIR)/libcore_a-termBag.Po
include ./$(DEPDIR)/libcore_a-termSet.Po
include ./$(DEPDIR)/libcore_a-trivialRhsAutomaton.Po
include ./$(DEPDIR)/libcore_a-unificationContext.Po
include ./$(DEPDIR)/libcore_a-unificationSubproblemDisjunction.Po
include ./$(DEPDIR)/libcore_a-variableAbstractionSubproblem.Po
include ./$(DEPDIR)/libcore_a-variableInfo.Po

.cc.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

libcore_a-memoryCell.o: memoryCell.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-memoryCell.o -MD -MP -MF $(DEPDIR)/libcore_a-memoryCell.Tpo -c -o libcore_a-memoryCell.o `test -f 'memoryCell.cc' || echo '$(srcdir)/'`memoryCell.cc
	mv -f $(DEPDIR)/libcore_a-memoryCell.Tpo $(DEPDIR)/libcore_a-memoryCell.Po
#	source='memoryCell.cc' object='libcore_a-memoryCell.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-memoryCell.o `test -f 'memoryCell.cc' || echo '$(srcdir)/'`memoryCell.cc

libcore_a-memoryCell.obj: memoryCell.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-memoryCell.obj -MD -MP -MF $(DEPDIR)/libcore_a-memoryCell.Tpo -c -o libcore_a-memoryCell.obj `if test -f 'memoryCell.cc'; then $(CYGPATH_W) 'memoryCell.cc'; else $(CYGPATH_W) '$(srcdir)/memoryCell.cc'; fi`
	mv -f $(DEPDIR)/libcore_a-memoryCell.Tpo $(DEPDIR)/libcore_a-memoryCell.Po
#	source='memoryCell.cc' object='libcore_a-memoryCell.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-memoryCell.obj `if test -f 'memoryCell.cc'; then $(CYGPATH_W) 'memoryCell.cc'; else $(CYGPATH_W) '$(srcdir)/memoryCell.cc'; fi`

libcore_a-rhsBuilder.o: rhsBuilder.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-rhsBuilder.o -MD -MP -MF $(DEPDIR)/libcore_a-rhsBuilder.Tpo -c -o libcore_a-rhsBuilder.o `test -f 'rhsBuilder.cc' || echo '$(srcdir)/'`rhsBuilder.cc
	mv -f $(DEPDIR)/libcore_a-rhsBuilder.Tpo $(DEPDIR)/libcore_a-rhsBuilder.Po
#	source='rhsBuilder.cc' object='libcore_a-rhsBuilder.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-rhsBuilder.o `test -f 'rhsBuilder.cc' || echo '$(srcdir)/'`rhsBuilder.cc

libcore_a-rhsBuilder.obj: rhsBuilder.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-rhsBuilder.obj -MD -MP -MF $(DEPDIR)/libcore_a-rhsBuilder.Tpo -c -o libcore_a-rhsBuilder.obj `if test -f 'rhsBuilder.cc'; then $(CYGPATH_W) 'rhsBuilder.cc'; else $(CYGPATH_W) '$(srcdir)/rhsBuilder.cc'; fi`
	mv -f $(DEPDIR)/libcore_a-rhsBuilder.Tpo $(DEPDIR)/libcore_a-rhsBuilder.Po
#	source='rhsBuilder.cc' object='libcore_a-rhsBuilder.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-rhsBuilder.obj `if test -f 'rhsBuilder.cc'; then $(CYGPATH_W) 'rhsBuilder.cc'; else $(CYGPATH_W) '$(srcdir)/rhsBuilder.cc'; fi`

libcore_a-termBag.o: termBag.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-termBag.o -MD -MP -MF $(DEPDIR)/libcore_a-termBag.Tpo -c -o libcore_a-termBag.o `test -f 'termBag.cc' || echo '$(srcdir)/'`termBag.cc
	mv -f $(DEPDIR)/libcore_a-termBag.Tpo $(DEPDIR)/libcore_a-termBag.Po
#	source='termBag.cc' object='libcore_a-termBag.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-termBag.o `test -f 'termBag.cc' || echo '$(srcdir)/'`termBag.cc

libcore_a-termBag.obj: termBag.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-termBag.obj -MD -MP -MF $(DEPDIR)/libcore_a-termBag.Tpo -c -o libcore_a-termBag.obj `if test -f 'termBag.cc'; then $(CYGPATH_W) 'termBag.cc'; else $(CYGPATH_W) '$(srcdir)/termBag.cc'; fi`
	mv -f $(DEPDIR)/libcore_a-termBag.Tpo $(DEPDIR)/libcore_a-termBag.Po
#	source='termBag.cc' object='libcore_a-termBag.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-termBag.obj `if test -f 'termBag.cc'; then $(CYGPATH_W) 'termBag.cc'; else $(CYGPATH_W) '$(srcdir)/termBag.cc'; fi`

libcore_a-bindingLhsAutomaton.o: bindingLhsAutomaton.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-bindingLhsAutomaton.o -MD -MP -MF $(DEPDIR)/libcore_a-bindingLhsAutomaton.Tpo -c -o libcore_a-bindingLhsAutomaton.o `test -f 'bindingLhsAutomaton.cc' || echo '$(srcdir)/'`bindingLhsAutomaton.cc
	mv -f $(DEPDIR)/libcore_a-bindingLhsAutomaton.Tpo $(DEPDIR)/libcore_a-bindingLhsAutomaton.Po
#	source='bindingLhsAutomaton.cc' object='libcore_a-bindingLhsAutomaton.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-bindingLhsAutomaton.o `test -f 'bindingLhsAutomaton.cc' || echo '$(srcdir)/'`bindingLhsAutomaton.cc

libcore_a-bindingLhsAutomaton.obj: bindingLhsAutomaton.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-bindingLhsAutomaton.obj -MD -MP -MF $(DEPDIR)/libcore_a-bindingLhsAutomaton.Tpo -c -o libcore_a-bindingLhsAutomaton.obj `if test -f 'bindingLhsAutomaton.cc'; then $(CYGPATH_W) 'bindingLhsAutomaton.cc'; else $(CYGPATH_W) '$(srcdir)/bindingLhsAutomaton.cc'; fi`
	mv -f $(DEPDIR)/libcore_a-bindingLhsAutomaton.Tpo $(DEPDIR)/libcore_a-bindingLhsAutomaton.Po
#	source='bindingLhsAutomaton.cc' object='libcore_a-bindingLhsAutomaton.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-bindingLhsAutomaton.obj `if test -f 'bindingLhsAutomaton.cc'; then $(CYGPATH_W) 'bindingLhsAutomaton.cc'; else $(CYGPATH_W) '$(srcdir)/bindingLhsAutomaton.cc'; fi`

libcore_a-trivialRhsAutomaton.o: trivialRhsAutomaton.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-trivialRhsAutomaton.o -MD -MP -MF $(DEPDIR)/libcore_a-trivialRhsAutomaton.Tpo -c -o libcore_a-trivialRhsAutomaton.o `test -f 'trivialRhsAutomaton.cc' || echo '$(srcdir)/'`trivialRhsAutomaton.cc
	mv -f $(DEPDIR)/libcore_a-trivialRhsAutomaton.Tpo $(DEPDIR)/libcore_a-trivialRhsAutomaton.Po
#	source='trivialRhsAutomaton.cc' object='libcore_a-trivialRhsAutomaton.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-trivialRhsAutomaton.o `test -f 'trivialRhsAutomaton.cc' || echo '$(srcdir)/'`trivialRhsAutomaton.cc

libcore_a-trivialRhsAutomaton.obj: trivialRhsAutomaton.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-trivialRhsAutomaton.obj -MD -MP -MF $(DEPDIR)/libcore_a-trivialRhsAutomaton.Tpo -c -o libcore_a-trivialRhsAutomaton.obj `if test -f 'trivialRhsAutomaton.cc'; then $(CYGPATH_W) 'trivialRhsAutomaton.cc'; else $(CYGPATH_W) '$(srcdir)/trivialRhsAutomaton.cc'; fi`
	mv -f $(DEPDIR)/libcore_a-trivialRhsAutomaton.Tpo $(DEPDIR)/libcore_a-trivialRhsAutomaton.Po
#	source='trivialRhsAutomaton.cc' object='libcore_a-trivialRhsAutomaton.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-trivialRhsAutomaton.obj `if test -f 'trivialRhsAutomaton.cc'; then $(CYGPATH_W) 'trivialRhsAutomaton.cc'; else $(CYGPATH_W) '$(srcdir)/trivialRhsAutomaton.cc'; fi`

libcore_a-copyRhsAutomaton.o: copyRhsAutomaton.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-copyRhsAutomaton.o -MD -MP -MF $(DEPDIR)/libcore_a-copyRhsAutomaton.Tpo -c -o libcore_a-copyRhsAutomaton.o `test -f 'copyRhsAutomaton.cc' || echo '$(srcdir)/'`copyRhsAutomaton.cc
	mv -f $(DEPDIR)/libcore_a-copyRhsAutomaton.Tpo $(DEPDIR)/libcore_a-copyRhsAutomaton.Po
#	source='copyRhsAutomaton.cc' object='libcore_a-copyRhsAutomaton.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-copyRhsAutomaton.o `test -f 'copyRhsAutomaton.cc' || echo '$(srcdir)/'`copyRhsAutomaton.cc

libcore_a-copyRhsAutomaton.obj: copyRhsAutomaton.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-copyRhsAutomaton.obj -MD -MP -MF $(DEPDIR)/libcore_a-copyRhsAutomaton.Tpo -c -o libcore_a-copyRhsAutomaton.obj `if test -f 'copyRhsAutomaton.cc'; then $(CYGPATH_W) 'copyRhsAutomaton.cc'; else $(CYGPATH_W) '$(srcdir)/copyRhsAutomaton.cc'; fi`
	mv -f $(DEPDIR)/libcore_a-copyRhsAutomaton.Tpo $(DEPDIR)/libcore_a-copyRhsAutomaton.Po
#	source='copyRhsAutomaton.cc' object='libcore_a-copyRhsAutomaton.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-copyRhsAutomaton.obj `if test -f 'copyRhsAutomaton.cc'; then $(CYGPATH_W) 'copyRhsAutomaton.cc'; else $(CYGPATH_W) '$(srcdir)/copyRhsAutomaton.cc'; fi`

libcore_a-variableInfo.o: variableInfo.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-variableInfo.o -MD -MP -MF $(DEPDIR)/libcore_a-variableInfo.Tpo -c -o libcore_a-variableInfo.o `test -f 'variableInfo.cc' || echo '$(srcdir)/'`variableInfo.cc
	mv -f $(DEPDIR)/libcore_a-variableInfo.Tpo $(DEPDIR)/libcore_a-variableInfo.Po
#	source='variableInfo.cc' object='libcore_a-variableInfo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-variableInfo.o `test -f 'variableInfo.cc' || echo '$(srcdir)/'`variableInfo.cc

libcore_a-variableInfo.obj: variableInfo.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-variableInfo.obj -MD -MP -MF $(DEPDIR)/libcore_a-variableInfo.Tpo -c -o libcore_a-variableInfo.obj `if test -f 'variableInfo.cc'; then $(CYGPATH_W) 'variableInfo.cc'; else $(CYGPATH_W) '$(srcdir)/variableInfo.cc'; fi`
	mv -f $(DEPDIR)/libcore_a-variableInfo.Tpo $(DEPDIR)/libcore_a-variableInfo.Po
#	source='variableInfo.cc' object='libcore_a-variableInfo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-variableInfo.obj `if test -f 'variableInfo.cc'; then $(CYGPATH_W) 'variableInfo.cc'; else $(CYGPATH_W) '$(srcdir)/variableInfo.cc'; fi`

libcore_a-narrowingVariableInfo.o: narrowingVariableInfo.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-narrowingVariableInfo.o -MD -MP -MF $(DEPDIR)/libcore_a-narrowingVariableInfo.Tpo -c -o libcore_a-narrowingVariableInfo.o `test -f 'narrowingVariableInfo.cc' || echo '$(srcdir)/'`narrowingVariableInfo.cc
	mv -f $(DEPDIR)/libcore_a-narrowingVariableInfo.Tpo $(DEPDIR)/libcore_a-narrowingVariableInfo.Po
#	source='narrowingVariableInfo.cc' object='libcore_a-narrowingVariableInfo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-narrowingVariableInfo.o `test -f 'narrowingVariableInfo.cc' || echo '$(srcdir)/'`narrowingVariableInfo.cc

libcore_a-narrowingVariableInfo.obj: narrowingVariableInfo.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-narrowingVariableInfo.obj -MD -MP -MF $(DEPDIR)/libcore_a-narrowingVariableInfo.Tpo -c -o libcore_a-narrowingVariableInfo.obj `if test -f 'narrowingVariableInfo.cc'; then $(CYGPATH_W) 'narrowingVariableInfo.cc'; else $(CYGPATH_W) '$(srcdir)/narrowingVariableInfo.cc'; fi`
	mv -f $(DEPDIR)/libcore_a-narrowingVariableInfo.Tpo $(DEPDIR)/libcore_a-narrowingVariableInfo.Po
#	source='narrowingVariableInfo.cc' object='libcore_a-narrowingVariableInfo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-narrowingVariableInfo.obj `if test -f 'narrowingVariableInfo.cc'; then $(CYGPATH_W) 'narrowingVariableInfo.cc'; else $(CYGPATH_W) '$(srcdir)/narrowingVariableInfo.cc'; fi`

libcore_a-termSet.o: termSet.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-termSet.o -MD -MP -MF $(DEPDIR)/libcore_a-termSet.Tpo -c -o libcore_a-termSet.o `test -f 'termSet.cc' || echo '$(srcdir)/'`termSet.cc
	mv -f $(DEPDIR)/libcore_a-termSet.Tpo $(DEPDIR)/libcore_a-termSet.Po
#	source='termSet.cc' object='libcore_a-termSet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-termSet.o `test -f 'termSet.cc' || echo '$(srcdir)/'`termSet.cc

libcore_a-termSet.obj: termSet.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-termSet.obj -MD -MP -MF $(DEPDIR)/libcore_a-termSet.Tpo -c -o libcore_a-termSet.obj `if test -f 'termSet.cc'; then $(CYGPATH_W) 'termSet.cc'; else $(CYGPATH_W) '$(srcdir)/termSet.cc'; fi`
	mv -f $(DEPDIR)/libcore_a-termSet.Tpo $(DEPDIR)/libcore_a-termSet.Po
#	source='termSet.cc' object='libcore_a-termSet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-termSet.obj `if test -f 'termSet.cc'; then $(CYGPATH_W) 'termSet.cc'; else $(CYGPATH_W) '$(srcdir)/termSet.cc'; fi`

libcore_a-strategy.o: strategy.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-strategy.o -MD -MP -MF $(DEPDIR)/libcore_a-strategy.Tpo -c -o libcore_a-strategy.o `test -f 'strategy.cc' || echo '$(srcdir)/'`strategy.cc
	mv -f $(DEPDIR)/libcore_a-strategy.Tpo $(DEPDIR)/libcore_a-strategy.Po
#	source='strategy.cc' object='libcore_a-strategy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-strategy.o `test -f 'strategy.cc' || echo '$(srcdir)/'`strategy.cc

libcore_a-strategy.obj: strategy.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-strategy.obj -MD -MP -MF $(DEPDIR)/libcore_a-strategy.Tpo -c -o libcore_a-strategy.obj `if test -f 'strategy.cc'; then $(CYGPATH_W) 'strategy.cc'; else $(CYGPATH_W) '$(srcdir)/strategy.cc'; fi`
	mv -f $(DEPDIR)/libcore_a-strategy.Tpo $(DEPDIR)/libcore_a-strategy.Po
#	source='strategy.cc' object='libcore_a-strategy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-strategy.obj `if test -f 'strategy.cc'; then $(CYGPATH_W) 'strategy.cc'; else $(CYGPATH_W) '$(srcdir)/strategy.cc'; fi`

libcore_a-sortTable.o: sortTable.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-sortTable.o -MD -MP -MF $(DEPDIR)/libcore_a-sortTable.Tpo -c -o libcore_a-sortTable.o `test -f 'sortTable.cc' || echo '$(srcdir)/'`sortTable.cc
	mv -f $(DEPDIR)/libcore_a-sortTable.Tpo $(DEPDIR)/libcore_a-sortTable.Po
#	source='sortTable.cc' object='libcore_a-sortTable.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-sortTable.o `test -f 'sortTable.cc' || echo '$(srcdir)/'`sortTable.cc

libcore_a-sortTable.obj: sortTable.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-sortTable.obj -MD -MP -MF $(DEPDIR)/libcore_a-sortTable.Tpo -c -o libcore_a-sortTable.obj `if test -f 'sortTable.cc'; then $(CYGPATH_W) 'sortTable.cc'; else $(CYGPATH_W) '$(srcdir)/sortTable.cc'; fi`
	mv -f $(DEPDIR)/libcore_a-sortTable.Tpo $(DEPDIR)/libcore_a-sortTable.Po
#	source='sortTable.cc' object='libcore_a-sortTable.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-sortTable.obj `if test -f 'sortTable.cc'; then $(CYGPATH_W) 'sortTable.cc'; else $(CYGPATH_W) '$(srcdir)/sortTable.cc'; fi`

libcore_a-sortConstraintTable.o: sortConstraintTable.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-sortConstraintTable.o -MD -MP -MF $(DEPDIR)/libcore_a-sortConstraintTable.Tpo -c -o libcore_a-sortConstraintTable.o `test -f 'sortConstraintTable.cc' || echo '$(srcdir)/'`sortConstraintTable.cc
	mv -f $(DEPDIR)/libcore_a-sortConstraintTable.Tpo $(DEPDIR)/libcore_a-sortConstraintTable.Po
#	source='sortConstraintTable.cc' object='libcore_a-sortConstraintTable.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-sortConstraintTable.o `test -f 'sortConstraintTable.cc' || echo '$(srcdir)/'`sortConstraintTable.cc

libcore_a-sortConstraintTable.obj: sortConstraintTable.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-sortConstraintTable.obj -MD -MP -MF $(DEPDIR)/libcore_a-sortConstraintTable.Tpo -c -o libcore_a-sortConstraintTable.obj `if test -f 'sortConstraintTable.cc'; then $(CYGPATH_W) 'sortConstraintTable.cc'; else $(CYGPATH_W) '$(srcdir)/sortConstraintTable.cc'; fi`
	mv -f $(DEPDIR)/libcore_a-sortConstraintTable.Tpo $(DEPDIR)/libcore_a-sortConstraintTable.Po
#	source='sortConstraintTable.cc' object='libcore_a-sortConstraintTable.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-sortConstraintTable.obj `if test -f 'sortConstraintTable.cc'; then $(CYGPATH_W) 'sortConstraintTable.cc'; else $(CYGPATH_W) '$(srcdir)/sortConstraintTable.cc'; fi`

libcore_a-equationTable.o: equationTable.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-equationTable.o -MD -MP -MF $(DEPDIR)/libcore_a-equationTable.Tpo -c -o libcore_a-equationTable.o `test -f 'equationTable.cc' || echo '$(srcdir)/'`equationTable.cc
	mv -f $(DEPDIR)/libcore_a-equationTable.Tpo $(DEPDIR)/libcore_a-equationTable.Po
#	source='equationTable.cc' object='libcore_a-equationTable.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-equationTable.o `test -f 'equationTable.cc' || echo '$(srcdir)/'`equationTable.cc

libcore_a-equationTable.obj: equationTable.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-equationTable.obj -MD -MP -MF $(DEPDIR)/libcore_a-equationTable.Tpo -c -o libcore_a-equationTable.obj `if test -f 'equationTable.cc'; then $(CYGPATH_W) 'equationTable.cc'; else $(CYGPATH_W) '$(srcdir)/equationTable.cc'; fi`
	mv -f $(DEPDIR)/libcore_a-equationTable.Tpo $(DEPDIR)/libcore_a-equationTable.Po
#	source='equationTable.cc' object='libcore_a-equationTable.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-equationTable.obj `if test -f 'equationTable.cc'; then $(CYGPATH_W) 'equationTable.cc'; else $(CYGPATH_W) '$(srcdir)/equationTable.cc'; fi`

libcore_a-ruleTable.o: ruleTable.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-ruleTable.o -MD -MP -MF $(DEPDIR)/libcore_a-ruleTable.Tpo -c -o libcore_a-ruleTable.o `test -f 'ruleTable.cc' || echo '$(srcdir)/'`ruleTable.cc
	mv -f $(DEPDIR)/libcore_a-ruleTable.Tpo $(DEPDIR)/libcore_a-ruleTable.Po
#	source='ruleTable.cc' object='libcore_a-ruleTable.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-ruleTable.o `test -f 'ruleTable.cc' || echo '$(srcdir)/'`ruleTable.cc

libcore_a-ruleTable.obj: ruleTable.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-ruleTable.obj -MD -MP -MF $(DEPDIR)/libcore_a-ruleTable.Tpo -c -o libcore_a-ruleTable.obj `if test -f 'ruleTable.cc'; then $(CYGPATH_W) 'ruleTable.cc'; else $(CYGPATH_W) '$(srcdir)/ruleTable.cc'; fi`
	mv -f $(DEPDIR)/libcore_a-ruleTable.Tpo $(DEPDIR)/libcore_a-ruleTable.Po
#	source='ruleTable.cc' object='libcore_a-ruleTable.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-ruleTable.obj `if test -f 'ruleTable.cc'; then $(CYGPATH_W) 'ruleTable.cc'; else $(CYGPATH_W) '$(srcdir)/ruleTable.cc'; fi`

libcore_a-sort.o: sort.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-sort.o -MD -MP -MF $(DEPDIR)/libcore_a-sort.Tpo -c -o libcore_a-sort.o `test -f 'sort.cc' || echo '$(srcdir)/'`sort.cc
	mv -f $(DEPDIR)/libcore_a-sort.Tpo $(DEPDIR)/libcore_a-sort.Po
#	source='sort.cc' object='libcore_a-sort.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-sort.o `test -f 'sort.cc' || echo '$(srcdir)/'`sort.cc

libcore_a-sort.obj: sort.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-sort.obj -MD -MP -MF $(DEPDIR)/libcore_a-sort.Tpo -c -o libcore_a-sort.obj `if test -f 'sort.cc'; then $(CYGPATH_W) 'sort.cc'; else $(CYGPATH_W) '$(srcdir)/sort.cc'; fi`
	mv -f $(DEPDIR)/libcore_a-sort.Tpo $(DEPDIR)/libcore_a-sort.Po
#	source='sort.cc' object='libcore_a-sort.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-sort.obj `if test -f 'sort.cc'; then $(CYGPATH_W) 'sort.cc'; else $(CYGPATH_W) '$(srcdir)/sort.cc'; fi`

libcore_a-connectedComponent.o: connectedComponent.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-connectedComponent.o -MD -MP -MF $(DEPDIR)/libcore_a-connectedComponent.Tpo -c -o libcore_a-connectedComponent.o `test -f 'connectedComponent.cc' || echo '$(srcdir)/'`connectedComponent.cc
	mv -f $(DEPDIR)/libcore_a-connectedComponent.Tpo $(DEPDIR)/libcore_a-connectedComponent.Po
#	source='connectedComponent.cc' object='libcore_a-connectedComponent.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-connectedComponent.o `test -f 'connectedComponent.cc' || echo '$(srcdir)/'`connectedComponent.cc

libcore_a-connectedComponent.obj: connectedComponent.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-connectedComponent.obj -MD -MP -MF $(DEPDIR)/libcore_a-connectedComponent.Tpo -c -o libcore_a-connectedComponent.obj `if test -f 'connectedComponent.cc'; then $(CYGPATH_W) 'connectedComponent.cc'; else $(CYGPATH_W) '$(srcdir)/connectedComponent.cc'; fi`
	mv -f $(DEPDIR)/libcore_a-connectedComponent.Tpo $(DEPDIR)/libcore_a-connectedComponent.Po
#	source='connectedComponent.cc' object='libcore_a-connectedComponent.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-connectedComponent.obj `if test -f 'connectedComponent.cc'; then $(CYGPATH_W) 'connectedComponent.cc'; else $(CYGPATH_W) '$(srcdir)/connectedComponent.cc'; fi`

libcore_a-module.o: module.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-module.o -MD -MP -MF $(DEPDIR)/libcore_a-module.Tpo -c -o libcore_a-module.o `test -f 'module.cc' || echo '$(srcdir)/'`module.cc
	mv -f $(DEPDIR)/libcore_a-module.Tpo $(DEPDIR)/libcore_a-module.Po
#	source='module.cc' object='libcore_a-module.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-module.o `test -f 'module.cc' || echo '$(srcdir)/'`module.cc

libcore_a-module.obj: module.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-module.obj -MD -MP -MF $(DEPDIR)/libcore_a-module.Tpo -c -o libcore_a-module.obj `if test -f 'module.cc'; then $(CYGPATH_W) 'module.cc'; else $(CYGPATH_W) '$(srcdir)/module.cc'; fi`
	mv -f $(DEPDIR)/libcore_a-module.Tpo $(DEPDIR)/libcore_a-module.Po
#	source='module.cc' object='libcore_a-module.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-module.obj `if test -f 'module.cc'; then $(CYGPATH_W) 'module.cc'; else $(CYGPATH_W) '$(srcdir)/module.cc'; fi`

libcore_a-substitution.o: substitution.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-substitution.o -MD -MP -MF $(DEPDIR)/libcore_a-substitution.Tpo -c -o libcore_a-substitution.o `test -f 'substitution.cc' || echo '$(srcdir)/'`substitution.cc
	mv -f $(DEPDIR)/libcore_a-substitution.Tpo $(DEPDIR)/libcore_a-substitution.Po
#	source='substitution.cc' object='libcore_a-substitution.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-substitution.o `test -f 'substitution.cc' || echo '$(srcdir)/'`substitution.cc

libcore_a-substitution.obj: substitution.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-substitution.obj -MD -MP -MF $(DEPDIR)/libcore_a-substitution.Tpo -c -o libcore_a-substitution.obj `if test -f 'substitution.cc'; then $(CYGPATH_W) 'substitution.cc'; else $(CYGPATH_W) '$(srcdir)/substitution.cc'; fi`
	mv -f $(DEPDIR)/libcore_a-substitution.Tpo $(DEPDIR)/libcore_a-substitution.Po
#	source='substitution.cc' object='libcore_a-substitution.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-substitution.obj `if test -f 'substitution.cc'; then $(CYGPATH_W) 'substitution.cc'; else $(CYGPATH_W) '$(srcdir)/substitution.cc'; fi`

libcore_a-localBinding.o: localBinding.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-localBinding.o -MD -MP -MF $(DEPDIR)/libcore_a-localBinding.Tpo -c -o libcore_a-localBinding.o `test -f 'localBinding.cc' || echo '$(srcdir)/'`localBinding.cc
	mv -f $(DEPDIR)/libcore_a-localBinding.Tpo $(DEPDIR)/libcore_a-localBinding.Po
#	source='localBinding.cc' object='libcore_a-localBinding.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-localBinding.o `test -f 'localBinding.cc' || echo '$(srcdir)/'`localBinding.cc

libcore_a-localBinding.obj: localBinding.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-localBinding.obj -MD -MP -MF $(DEPDIR)/libcore_a-localBinding.Tpo -c -o libcore_a-localBinding.obj `if test -f 'localBinding.cc'; then $(CYGPATH_W) 'localBinding.cc'; else $(CYGPATH_W) '$(srcdir)/localBinding.cc'; fi`
	mv -f $(DEPDIR)/libcore_a-localBinding.Tpo $(DEPDIR)/libcore_a-localBinding.Po
#	source='localBinding.cc' object='libcore_a-localBinding.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-localBinding.obj `if test -f 'localBinding.cc'; then $(CYGPATH_W) 'localBinding.cc'; else $(CYGPATH_W) '$(srcdir)/localBinding.cc'; fi`

libcore_a-subproblemSequence.o: subproblemSequence.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-subproblemSequence.o -MD -MP -MF $(DEPDIR)/libcore_a-subproblemSequence.Tpo -c -o libcore_a-subproblemSequence.o `test -f 'subproblemSequence.cc' || echo '$(srcdir)/'`subproblemSequence.cc
	mv -f $(DEPDIR)/libcore_a-subproblemSequence.Tpo $(DEPDIR)/libcore_a-subproblemSequence.Po
#	source='subproblemSequence.cc' object='libcore_a-subproblemSequence.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-subproblemSequence.o `test -f 'subproblemSequence.cc' || echo '$(srcdir)/'`subproblemSequence.cc

libcore_a-subproblemSequence.obj: subproblemSequence.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-subproblemSequence.obj -MD -MP -MF $(DEPDIR)/libcore_a-subproblemSequence.Tpo -c -o libcore_a-subproblemSequence.obj `if test -f 'subproblemSequence.cc'; then $(CYGPATH_W) 'subproblemSequence.cc'; else $(CYGPATH_W) '$(srcdir)/subproblemSequence.cc'; fi`
	mv -f $(DEPDIR)/libcore_a-subproblemSequence.Tpo $(DEPDIR)/libcore_a-subproblemSequence.Po
#	source='subproblemSequence.cc' object='libcore_a-subproblemSequence.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-subproblemSequence.obj `if test -f 'subproblemSequence.cc'; then $(CYGPATH_W) 'subproblemSequence.cc'; else $(CYGPATH_W) '$(srcdir)/subproblemSequence.cc'; fi`

libcore_a-subproblemDisjunction.o: subproblemDisjunction.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-subproblemDisjunction.o -MD -MP -MF $(DEPDIR)/libcore_a-subproblemDisjunction.Tpo -c -o libcore_a-subproblemDisjunction.o `test -f 'subproblemDisjunction.cc' || echo '$(srcdir)/'`subproblemDisjunction.cc
	mv -f $(DEPDIR)/libcore_a-subproblemDisjunction.Tpo $(DEPDIR)/libcore_a-subproblemDisjunction.Po
#	source='subproblemDisjunction.cc' object='libcore_a-subproblemDisjunction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-subproblemDisjunction.o `test -f 'subproblemDisjunction.cc' || echo '$(srcdir)/'`subproblemDisjunction.cc

libcore_a-subproblemDisjunction.obj: subproblemDisjunction.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-subproblemDisjunction.obj -MD -MP -MF $(DEPDIR)/libcore_a-subproblemDisjunction.Tpo -c -o libcore_a-subproblemDisjunction.obj `if test -f 'subproblemDisjunction.cc'; then $(CYGPATH_W) 'subproblemDisjunction.cc'; else $(CYGPATH_W) '$(srcdir)/subproblemDisjunction.cc'; fi`
	mv -f $(DEPDIR)/libcore_a-subproblemDisjunction.Tpo $(DEPDIR)/libcore_a-subproblemDisjunction.Po
#	source='subproblemDisjunction.cc' object='libcore_a-subproblemDisjunction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-subproblemDisjunction.obj `if test -f 'subproblemDisjunction.cc'; then $(CYGPATH_W) 'subproblemDisjunction.cc'; else $(CYGPATH_W) '$(srcdir)/subproblemDisjunction.cc'; fi`

libcore_a-sortCheckSubproblem.o: sortCheckSubproblem.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-sortCheckSubproblem.o -MD -MP -MF $(DEPDIR)/libcore_a-sortCheckSubproblem.Tpo -c -o libcore_a-sortCheckSubproblem.o `test -f 'sortCheckSubproblem.cc' || echo '$(srcdir)/'`sortCheckSubproblem.cc
	mv -f $(DEPDIR)/libcore_a-sortCheckSubproblem.Tpo $(DEPDIR)/libcore_a-sortCheckSubproblem.Po
#	source='sortCheckSubproblem.cc' object='libcore_a-sortCheckSubproblem.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-sortCheckSubproblem.o `test -f 'sortCheckSubproblem.cc' || echo '$(srcdir)/'`sortCheckSubproblem.cc

libcore_a-sortCheckSubproblem.obj: sortCheckSubproblem.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-sortCheckSubproblem.obj -MD -MP -MF $(DEPDIR)/libcore_a-sortCheckSubproblem.Tpo -c -o libcore_a-sortCheckSubproblem.obj `if test -f 'sortCheckSubproblem.cc'; then $(CYGPATH_W) 'sortCheckSubproblem.cc'; else $(CYGPATH_W) '$(srcdir)/sortCheckSubproblem.cc'; fi`
	mv -f $(DEPDIR)/libcore_a-sortCheckSubproblem.Tpo $(DEPDIR)/libcore_a-sortCheckSubproblem.Po
#	source='sortCheckSubproblem.cc' object='libcore_a-sortCheckSubproblem.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-sortCheckSubproblem.obj `if test -f 'sortCheckSubproblem.cc'; then $(CYGPATH_W) 'sortCheckSubproblem.cc'; else $(CYGPATH_W) '$(srcdir)/sortCheckSubproblem.cc'; fi`

libcore_a-disjunctiveSubproblemAccumulator.o: disjunctiveSubproblemAccumulator.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-disjunctiveSubproblemAccumulator.o -MD -MP -MF $(DEPDIR)/libcore_a-disjunctiveSubproblemAccumulator.Tpo -c -o libcore_a-disjunctiveSubproblemAccumulator.o `test -f 'disjunctiveSubproblemAccumulator.cc' || echo '$(srcdir)/'`disjunctiveSubproblemAccumulator.cc
	mv -f $(DEPDIR)/libcore_a-disjunctiveSubproblemAccumulator.Tpo $(DEPDIR)/libcore_a-disjunctiveSubproblemAccumulator.Po
#	source='disjunctiveSubproblemAccumulator.cc' object='libcore_a-disjunctiveSubproblemAccumulator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-disjunctiveSubproblemAccumulator.o `test -f 'disjunctiveSubproblemAccumulator.cc' || echo '$(srcdir)/'`disjunctiveSubproblemAccumulator.cc

libcore_a-disjunctiveSubproblemAccumulator.obj: disjunctiveSubproblemAccumulator.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-disjunctiveSubproblemAccumulator.obj -MD -MP -MF $(DEPDIR)/libcore_a-disjunctiveSubproblemAccumulator.Tpo -c -o libcore_a-disjunctiveSubproblemAccumulator.obj `if test -f 'disjunctiveSubproblemAccumulator.cc'; then $(CYGPATH_W) 'disjunctiveSubproblemAccumulator.cc'; else $(CYGPATH_W) '$(srcdir)/disjunctiveSubproblemAccumulator.cc'; fi`
	mv -f $(DEPDIR)/libcore_a-disjunctiveSubproblemAccumulator.Tpo $(DEPDIR)/libcore_a-disjunctiveSubproblemAccumulator.Po
#	source='disjunctiveSubproblemAccumulator.cc' object='libcore_a-disjunctiveSubproblemAccumulator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-disjunctiveSubproblemAccumulator.obj `if test -f 'disjunctiveSubproblemAccumulator.cc'; then $(CYGPATH_W) 'disjunctiveSubproblemAccumulator.cc'; else $(CYGPATH_W) '$(srcdir)/disjunctiveSubproblemAccumulator.cc'; fi`

libcore_a-preEquation.o: preEquation.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-preEquation.o -MD -MP -MF $(DEPDIR)/libcore_a-preEquation.Tpo -c -o libcore_a-preEquation.o `test -f 'preEquation.cc' || echo '$(srcdir)/'`preEquation.cc
	mv -f $(DEPDIR)/libcore_a-preEquation.Tpo $(DEPDIR)/libcore_a-preEquation.Po
#	source='preEquation.cc' object='libcore_a-preEquation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-preEquation.o `test -f 'preEquation.cc' || echo '$(srcdir)/'`preEquation.cc

libcore_a-preEquation.obj: preEquation.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-preEquation.obj -MD -MP -MF $(DEPDIR)/libcore_a-preEquation.Tpo -c -o libcore_a-preEquation.obj `if test -f 'preEquation.cc'; then $(CYGPATH_W) 'preEquation.cc'; else $(CYGPATH_W) '$(srcdir)/preEquation.cc'; fi`
	mv -f $(DEPDIR)/libcore_a-preEquation.Tpo $(DEPDIR)/libcore_a-preEquation.Po
#	source='preEquation.cc' object='libcore_a-preEquation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-preEquation.obj `if test -f 'preEquation.cc'; then $(CYGPATH_W) 'preEquation.cc'; else $(CYGPATH_W) '$(srcdir)/preEquation.cc'; fi`

libcore_a-equation.o: equation.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-equation.o -MD -MP -MF $(DEPDIR)/libcore_a-equation.Tpo -c -o libcore_a-equation.o `test -f 'equation.cc' || echo '$(srcdir)/'`equation.cc
	mv -f $(DEPDIR)/libcore_a-equation.Tpo $(DEPDIR)/libcore_a-equation.Po
#	source='equation.cc' object='libcore_a-equation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-equation.o `test -f 'equation.cc' || echo '$(srcdir)/'`equation.cc

libcore_a-equation.obj: equation.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-equation.obj -MD -MP -MF $(DEPDIR)/libcore_a-equation.Tpo -c -o libcore_a-equation.obj `if test -f 'equation.cc'; then $(CYGPATH_W) 'equation.cc'; else $(CYGPATH_W) '$(srcdir)/equation.cc'; fi`
	mv -f $(DEPDIR)/libcore_a-equation.Tpo $(DEPDIR)/libcore_a-equation.Po
#	source='equation.cc' object='libcore_a-equation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-equation.obj `if test -f 'equation.cc'; then $(CYGPATH_W) 'equation.cc'; else $(CYGPATH_W) '$(srcdir)/equation.cc'; fi`

libcore_a-rule.o: rule.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-rule.o -MD -MP -MF $(DEPDIR)/libcore_a-rule.Tpo -c -o libcore_a-rule.o `test -f 'rule.cc' || echo '$(srcdir)/'`rule.cc
	mv -f $(DEPDIR)/libcore_a-rule.Tpo $(DEPDIR)/libcore_a-rule.Po
#	source='rule.cc' object='libcore_a-rule.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-rule.o `test -f 'rule.cc' || echo '$(srcdir)/'`rule.cc

libcore_a-rule.obj: rule.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-rule.obj -MD -MP -MF $(DEPDIR)/libcore_a-rule.Tpo -c -o libcore_a-rule.obj `if test -f 'rule.cc'; then $(CYGPATH_W) 'rule.cc'; else $(CYGPATH_W) '$(srcdir)/rule.cc'; fi`
	mv -f $(DEPDIR)/libcore_a-rule.Tpo $(DEPDIR)/libcore_a-rule.Po
#	source='rule.cc' object='libcore_a-rule.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-rule.obj `if test -f 'rule.cc'; then $(CYGPATH_W) 'rule.cc'; else $(CYGPATH_W) '$(srcdir)/rule.cc'; fi`

libcore_a-sortConstraint.o: sortConstraint.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-sortConstraint.o -MD -MP -MF $(DEPDIR)/libcore_a-sortConstraint.Tpo -c -o libcore_a-sortConstraint.o `test -f 'sortConstraint.cc' || echo '$(srcdir)/'`sortConstraint.cc
	mv -f $(DEPDIR)/libcore_a-sortConstraint.Tpo $(DEPDIR)/libcore_a-sortConstraint.Po
#	source='sortConstraint.cc' object='libcore_a-sortConstraint.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-sortConstraint.o `test -f 'sortConstraint.cc' || echo '$(srcdir)/'`sortConstraint.cc

libcore_a-sortConstraint.obj: sortConstraint.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-sortConstraint.obj -MD -MP -MF $(DEPDIR)/libcore_a-sortConstraint.Tpo -c -o libcore_a-sortConstraint.obj `if test -f 'sortConstraint.cc'; then $(CYGPATH_W) 'sortConstraint.cc'; else $(CYGPATH_W) '$(srcdir)/sortConstraint.cc'; fi`
	mv -f $(DEPDIR)/libcore_a-sortConstraint.Tpo $(DEPDIR)/libcore_a-sortConstraint.Po
#	source='sortConstraint.cc' object='libcore_a-sortConstraint.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-sortConstraint.obj `if test -f 'sortConstraint.cc'; then $(CYGPATH_W) 'sortConstraint.cc'; else $(CYGPATH_W) '$(srcdir)/sortConstraint.cc'; fi`

libcore_a-rewritingContext.o: rewritingContext.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-rewritingContext.o -MD -MP -MF $(DEPDIR)/libcore_a-rewritingContext.Tpo -c -o libcore_a-rewritingContext.o `test -f 'rewritingContext.cc' || echo '$(srcdir)/'`rewritingContext.cc
	mv -f $(DEPDIR)/libcore_a-rewritingContext.Tpo $(DEPDIR)/libcore_a-rewritingContext.Po
#	source='rewritingContext.cc' object='libcore_a-rewritingContext.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-rewritingContext.o `test -f 'rewritingContext.cc' || echo '$(srcdir)/'`rewritingContext.cc

libcore_a-rewritingContext.obj: rewritingContext.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-rewritingContext.obj -MD -MP -MF $(DEPDIR)/libcore_a-rewritingContext.Tpo -c -o libcore_a-rewritingContext.obj `if test -f 'rewritingContext.cc'; then $(CYGPATH_W) 'rewritingContext.cc'; else $(CYGPATH_W) '$(srcdir)/rewritingContext.cc'; fi`
	mv -f $(DEPDIR)/libcore_a-rewritingContext.Tpo $(DEPDIR)/libcore_a-rewritingContext.Po
#	source='rewritingContext.cc' object='libcore_a-rewritingContext.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-rewritingContext.obj `if test -f 'rewritingContext.cc'; then $(CYGPATH_W) 'rewritingContext.cc'; else $(CYGPATH_W) '$(srcdir)/rewritingContext.cc'; fi`

libcore_a-variableAbstractionSubproblem.o: variableAbstractionSubproblem.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-variableAbstractionSubproblem.o -MD -MP -MF $(DEPDIR)/libcore_a-variableAbstractionSubproblem.Tpo -c -o libcore_a-variableAbstractionSubproblem.o `test -f 'variableAbstractionSubproblem.cc' || echo '$(srcdir)/'`variableAbstractionSubproblem.cc
	mv -f $(DEPDIR)/libcore_a-variableAbstractionSubproblem.Tpo $(DEPDIR)/libcore_a-variableAbstractionSubproblem.Po
#	source='variableAbstractionSubproblem.cc' object='libcore_a-variableAbstractionSubproblem.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-variableAbstractionSubproblem.o `test -f 'variableAbstractionSubproblem.cc' || echo '$(srcdir)/'`variableAbstractionSubproblem.cc

libcore_a-variableAbstractionSubproblem.obj: variableAbstractionSubproblem.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-variableAbstractionSubproblem.obj -MD -MP -MF $(DEPDIR)/libcore_a-variableAbstractionSubproblem.Tpo -c -o libcore_a-variableAbstractionSubproblem.obj `if test -f 'variableAbstractionSubproblem.cc'; then $(CYGPATH_W) 'variableAbstractionSubproblem.cc'; else $(CYGPATH_W) '$(srcdir)/variableAbstractionSubproblem.cc'; fi`
	mv -f $(DEPDIR)/libcore_a-variableAbstractionSubproblem.Tpo $(DEPDIR)/libcore_a-variableAbstractionSubproblem.Po
#	source='variableAbstractionSubproblem.cc' object='libcore_a-variableAbstractionSubproblem.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-variableAbstractionSubproblem.obj `if test -f 'variableAbstractionSubproblem.cc'; then $(CYGPATH_W) 'variableAbstractionSubproblem.cc'; else $(CYGPATH_W) '$(srcdir)/variableAbstractionSubproblem.cc'; fi`

libcore_a-equalitySubproblem.o: equalitySubproblem.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-equalitySubproblem.o -MD -MP -MF $(DEPDIR)/libcore_a-equalitySubproblem.Tpo -c -o libcore_a-equalitySubproblem.o `test -f 'equalitySubproblem.cc' || echo '$(srcdir)/'`equalitySubproblem.cc
	mv -f $(DEPDIR)/libcore_a-equalitySubproblem.Tpo $(DEPDIR)/libcore_a-equalitySubproblem.Po
#	source='equalitySubproblem.cc' object='libcore_a-equalitySubproblem.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-equalitySubproblem.o `test -f 'equalitySubproblem.cc' || echo '$(srcdir)/'`equalitySubproblem.cc

libcore_a-equalitySubproblem.obj: equalitySubproblem.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-equalitySubproblem.obj -MD -MP -MF $(DEPDIR)/libcore_a-equalitySubproblem.Tpo -c -o libcore_a-equalitySubproblem.obj `if test -f 'equalitySubproblem.cc'; then $(CYGPATH_W) 'equalitySubproblem.cc'; else $(CYGPATH_W) '$(srcdir)/equalitySubproblem.cc'; fi`
	mv -f $(DEPDIR)/libcore_a-equalitySubproblem.Tpo $(DEPDIR)/libcore_a-equalitySubproblem.Po
#	source='equalitySubproblem.cc' object='libcore_a-equalitySubproblem.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-equalitySubproblem.obj `if test -f 'equalitySubproblem.cc'; then $(CYGPATH_W) 'equalitySubproblem.cc'; else $(CYGPATH_W) '$(srcdir)/equalitySubproblem.cc'; fi`

libcore_a-dagRoot.o: dagRoot.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-dagRoot.o -MD -MP -MF $(DEPDIR)/libcore_a-dagRoot.Tpo -c -o libcore_a-dagRoot.o `test -f 'dagRoot.cc' || echo '$(srcdir)/'`dagRoot.cc
	mv -f $(DEPDIR)/libcore_a-dagRoot.Tpo $(DEPDIR)/libcore_a-dagRoot.Po
#	source='dagRoot.cc' object='libcore_a-dagRoot.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-dagRoot.o `test -f 'dagRoot.cc' || echo '$(srcdir)/'`dagRoot.cc

libcore_a-dagRoot.obj: dagRoot.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-dagRoot.obj -MD -MP -MF $(DEPDIR)/libcore_a-dagRoot.Tpo -c -o libcore_a-dagRoot.obj `if test -f 'dagRoot.cc'; then $(CYGPATH_W) 'dagRoot.cc'; else $(CYGPATH_W) '$(srcdir)/dagRoot.cc'; fi`
	mv -f $(DEPDIR)/libcore_a-dagRoot.Tpo $(DEPDIR)/libcore_a-dagRoot.Po
#	source='dagRoot.cc' object='libcore_a-dagRoot.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-dagRoot.obj `if test -f 'dagRoot.cc'; then $(CYGPATH_W) 'dagRoot.cc'; else $(CYGPATH_W) '$(srcdir)/dagRoot.cc'; fi`

libcore_a-cachedDag.o: cachedDag.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-cachedDag.o -MD -MP -MF $(DEPDIR)/libcore_a-cachedDag.Tpo -c -o libcore_a-cachedDag.o `test -f 'cachedDag.cc' || echo '$(srcdir)/'`cachedDag.cc
	mv -f $(DEPDIR)/libcore_a-cachedDag.Tpo $(DEPDIR)/libcore_a-cachedDag.Po
#	source='cachedDag.cc' object='libcore_a-cachedDag.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-cachedDag.o `test -f 'cachedDag.cc' || echo '$(srcdir)/'`cachedDag.cc

libcore_a-cachedDag.obj: cachedDag.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-cachedDag.obj -MD -MP -MF $(DEPDIR)/libcore_a-cachedDag.Tpo -c -o libcore_a-cachedDag.obj `if test -f 'cachedDag.cc'; then $(CYGPATH_W) 'cachedDag.cc'; else $(CYGPATH_W) '$(srcdir)/cachedDag.cc'; fi`
	mv -f $(DEPDIR)/libcore_a-cachedDag.Tpo $(DEPDIR)/libcore_a-cachedDag.Po
#	source='cachedDag.cc' object='libcore_a-cachedDag.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-cachedDag.obj `if test -f 'cachedDag.cc'; then $(CYGPATH_W) 'cachedDag.cc'; else $(CYGPATH_W) '$(srcdir)/cachedDag.cc'; fi`

libcore_a-extensionMatchSubproblem.o: extensionMatchSubproblem.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-extensionMatchSubproblem.o -MD -MP -MF $(DEPDIR)/libcore_a-extensionMatchSubproblem.Tpo -c -o libcore_a-extensionMatchSubproblem.o `test -f 'extensionMatchSubproblem.cc' || echo '$(srcdir)/'`extensionMatchSubproblem.cc
	mv -f $(DEPDIR)/libcore_a-extensionMatchSubproblem.Tpo $(DEPDIR)/libcore_a-extensionMatchSubproblem.Po
#	source='extensionMatchSubproblem.cc' object='libcore_a-extensionMatchSubproblem.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-extensionMatchSubproblem.o `test -f 'extensionMatchSubproblem.cc' || echo '$(srcdir)/'`extensionMatchSubproblem.cc

libcore_a-extensionMatchSubproblem.obj: extensionMatchSubproblem.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-extensionMatchSubproblem.obj -MD -MP -MF $(DEPDIR)/libcore_a-extensionMatchSubproblem.Tpo -c -o libcore_a-extensionMatchSubproblem.obj `if test -f 'extensionMatchSubproblem.cc'; then $(CYGPATH_W) 'extensionMatchSubproblem.cc'; else $(CYGPATH_W) '$(srcdir)/extensionMatchSubproblem.cc'; fi`
	mv -f $(DEPDIR)/libcore_a-extensionMatchSubproblem.Tpo $(DEPDIR)/libcore_a-extensionMatchSubproblem.Po
#	source='extensionMatchSubproblem.cc' object='libcore_a-extensionMatchSubproblem.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-extensionMatchSubproblem.obj `if test -f 'extensionMatchSubproblem.cc'; then $(CYGPATH_W) 'extensionMatchSubproblem.cc'; else $(CYGPATH_W) '$(srcdir)/extensionMatchSubproblem.cc'; fi`

libcore_a-dagNodeSet.o: dagNodeSet.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-dagNodeSet.o -MD -MP -MF $(DEPDIR)/libcore_a-dagNodeSet.Tpo -c -o libcore_a-dagNodeSet.o `test -f 'dagNodeSet.cc' || echo '$(srcdir)/'`dagNodeSet.cc
	mv -f $(DEPDIR)/libcore_a-dagNodeSet.Tpo $(DEPDIR)/libcore_a-dagNodeSet.Po
#	source='dagNodeSet.cc' object='libcore_a-dagNodeSet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-dagNodeSet.o `test -f 'dagNodeSet.cc' || echo '$(srcdir)/'`dagNodeSet.cc

libcore_a-dagNodeSet.obj: dagNodeSet.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-dagNodeSet.obj -MD -MP -MF $(DEPDIR)/libcore_a-dagNodeSet.Tpo -c -o libcore_a-dagNodeSet.obj `if test -f 'dagNodeSet.cc'; then $(CYGPATH_W) 'dagNodeSet.cc'; else $(CYGPATH_W) '$(srcdir)/dagNodeSet.cc'; fi`
	mv -f $(DEPDIR)/libcore_a-dagNodeSet.Tpo $(DEPDIR)/libcore_a-dagNodeSet.Po
#	source='dagNodeSet.cc' object='libcore_a-dagNodeSet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-dagNodeSet.obj `if test -f 'dagNodeSet.cc'; then $(CYGPATH_W) 'dagNodeSet.cc'; else $(CYGPATH_W) '$(srcdir)/dagNodeSet.cc'; fi`

libcore_a-hashConsSet.o: hashConsSet.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-hashConsSet.o -MD -MP -MF $(DEPDIR)/libcore_a-hashConsSet.Tpo -c -o libcore_a-hashConsSet.o `test -f 'hashConsSet.cc' || echo '$(srcdir)/'`hashConsSet.cc
	mv -f $(DEPDIR)/libcore_a-hashConsSet.Tpo $(DEPDIR)/libcore_a-hashConsSet.Po
#	source='hashConsSet.cc' object='libcore_a-hashConsSet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-hashConsSet.o `test -f 'hashConsSet.cc' || echo '$(srcdir)/'`hashConsSet.cc

libcore_a-hashConsSet.obj: hashConsSet.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-hashConsSet.obj -MD -MP -MF $(DEPDIR)/libcore_a-hashConsSet.Tpo -c -o libcore_a-hashConsSet.obj `if test -f 'hashConsSet.cc'; then $(CYGPATH_W) 'hashConsSet.cc'; else $(CYGPATH_W) '$(srcdir)/hashConsSet.cc'; fi`
	mv -f $(DEPDIR)/libcore_a-hashConsSet.Tpo $(DEPDIR)/libcore_a-hashConsSet.Po
#	source='hashConsSet.cc' object='libcore_a-hashConsSet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-hashConsSet.obj `if test -f 'hashConsSet.cc'; then $(CYGPATH_W) 'hashConsSet.cc'; else $(CYGPATH_W) '$(srcdir)/hashConsSet.cc'; fi`

libcore_a-memoTable.o: memoTable.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-memoTable.o -MD -MP -MF $(DEPDIR)/libcore_a-memoTable.Tpo -c -o libcore_a-memoTable.o `test -f 'memoTable.cc' || echo '$(srcdir)/'`memoTable.cc
	mv -f $(DEPDIR)/libcore_a-memoTable.Tpo $(DEPDIR)/libcore_a-memoTable.Po
#	source='memoTable.cc' object='libcore_a-memoTable.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-memoTable.o `test -f 'memoTable.cc' || echo '$(srcdir)/'`memoTable.cc

libcore_a-memoTable.obj: memoTable.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-memoTable.obj -MD -MP -MF $(DEPDIR)/libcore_a-memoTable.Tpo -c -o libcore_a-memoTable.obj `if test -f 'memoTable.cc'; then $(CYGPATH_W) 'memoTable.cc'; else $(CYGPATH_W) '$(srcdir)/memoTable.cc'; fi`
	mv -f $(DEPDIR)/libcore_a-memoTable.Tpo $(DEPDIR)/libcore_a-memoTable.Po
#	source='memoTable.cc' object='libcore_a-memoTable.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-memoTable.obj `if test -f 'memoTable.cc'; then $(CYGPATH_W) 'memoTable.cc'; else $(CYGPATH_W) '$(srcdir)/memoTable.cc'; fi`

libcore_a-memoMap.o: memoMap.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-memoMap.o -MD -MP -MF $(DEPDIR)/libcore_a-memoMap.Tpo -c -o libcore_a-memoMap.o `test -f 'memoMap.cc' || echo '$(srcdir)/'`memoMap.cc
	mv -f $(DEPDIR)/libcore_a-memoMap.Tpo $(DEPDIR)/libcore_a-memoMap.Po
#	source='memoMap.cc' object='libcore_a-memoMap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-memoMap.o `test -f 'memoMap.cc' || echo '$(srcdir)/'`memoMap.cc

libcore_a-memoMap.obj: memoMap.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-memoMap.obj -MD -MP -MF $(DEPDIR)/libcore_a-memoMap.Tpo -c -o libcore_a-memoMap.obj `if test -f 'memoMap.cc'; then $(CYGPATH_W) 'memoMap.cc'; else $(CYGPATH_W) '$(srcdir)/memoMap.cc'; fi`
	mv -f $(DEPDIR)/libcore_a-memoMap.Tpo $(DEPDIR)/libcore_a-memoMap.Po
#	source='memoMap.cc' object='libcore_a-memoMap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-memoMap.obj `if test -f 'memoMap.cc'; then $(CYGPATH_W) 'memoMap.cc'; else $(CYGPATH_W) '$(srcdir)/memoMap.cc'; fi`

libcore_a-rootContainer.o: rootContainer.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-rootContainer.o -MD -MP -MF $(DEPDIR)/libcore_a-rootContainer.Tpo -c -o libcore_a-rootContainer.o `test -f 'rootContainer.cc' || echo '$(srcdir)/'`rootContainer.cc
	mv -f $(DEPDIR)/libcore_a-rootContainer.Tpo $(DEPDIR)/libcore_a-rootContainer.Po
#	source='rootContainer.cc' object='libcore_a-rootContainer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-rootContainer.o `test -f 'rootContainer.cc' || echo '$(srcdir)/'`rootContainer.cc

libcore_a-rootContainer.obj: rootContainer.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-rootContainer.obj -MD -MP -MF $(DEPDIR)/libcore_a-rootContainer.Tpo -c -o libcore_a-rootContainer.obj `if test -f 'rootContainer.cc'; then $(CYGPATH_W) 'rootContainer.cc'; else $(CYGPATH_W) '$(srcdir)/rootContainer.cc'; fi`
	mv -f $(DEPDIR)/libcore_a-rootContainer.Tpo $(DEPDIR)/libcore_a-rootContainer.Po
#	source='rootContainer.cc' object='libcore_a-rootContainer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-rootContainer.obj `if test -f 'rootContainer.cc'; then $(CYGPATH_W) 'rootContainer.cc'; else $(CYGPATH_W) '$(srcdir)/rootContainer.cc'; fi`

libcore_a-sortBdds.o: sortBdds.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-sortBdds.o -MD -MP -MF $(DEPDIR)/libcore_a-sortBdds.Tpo -c -o libcore_a-sortBdds.o `test -f 'sortBdds.cc' || echo '$(srcdir)/'`sortBdds.cc
	mv -f $(DEPDIR)/libcore_a-sortBdds.Tpo $(DEPDIR)/libcore_a-sortBdds.Po
#	source='sortBdds.cc' object='libcore_a-sortBdds.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-sortBdds.o `test -f 'sortBdds.cc' || echo '$(srcdir)/'`sortBdds.cc

libcore_a-sortBdds.obj: sortBdds.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-sortBdds.obj -MD -MP -MF $(DEPDIR)/libcore_a-sortBdds.Tpo -c -o libcore_a-sortBdds.obj `if test -f 'sortBdds.cc'; then $(CYGPATH_W) 'sortBdds.cc'; else $(CYGPATH_W) '$(srcdir)/sortBdds.cc'; fi`
	mv -f $(DEPDIR)/libcore_a-sortBdds.Tpo $(DEPDIR)/libcore_a-sortBdds.Po
#	source='sortBdds.cc' object='libcore_a-sortBdds.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-sortBdds.obj `if test -f 'sortBdds.cc'; then $(CYGPATH_W) 'sortBdds.cc'; else $(CYGPATH_W) '$(srcdir)/sortBdds.cc'; fi`

libcore_a-unificationContext.o: unificationContext.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-unificationContext.o -MD -MP -MF $(DEPDIR)/libcore_a-unificationContext.Tpo -c -o libcore_a-unificationContext.o `test -f 'unificationContext.cc' || echo '$(srcdir)/'`unificationContext.cc
	mv -f $(DEPDIR)/libcore_a-unificationContext.Tpo $(DEPDIR)/libcore_a-unificationContext.Po
#	source='unificationContext.cc' object='libcore_a-unificationContext.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-unificationContext.o `test -f 'unificationContext.cc' || echo '$(srcdir)/'`unificationContext.cc

libcore_a-unificationContext.obj: unificationContext.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-unificationContext.obj -MD -MP -MF $(DEPDIR)/libcore_a-unificationContext.Tpo -c -o libcore_a-unificationContext.obj `if test -f 'unificationContext.cc'; then $(CYGPATH_W) 'unificationContext.cc'; else $(CYGPATH_W) '$(srcdir)/unificationContext.cc'; fi`
	mv -f $(DEPDIR)/libcore_a-unificationContext.Tpo $(DEPDIR)/libcore_a-unificationContext.Po
#	source='unificationContext.cc' object='libcore_a-unificationContext.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-unificationContext.obj `if test -f 'unificationContext.cc'; then $(CYGPATH_W) 'unificationContext.cc'; else $(CYGPATH_W) '$(srcdir)/unificationContext.cc'; fi`

libcore_a-protectedDagNodeSet.o: protectedDagNodeSet.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-protectedDagNodeSet.o -MD -MP -MF $(DEPDIR)/libcore_a-protectedDagNodeSet.Tpo -c -o libcore_a-protectedDagNodeSet.o `test -f 'protectedDagNodeSet.cc' || echo '$(srcdir)/'`protectedDagNodeSet.cc
	mv -f $(DEPDIR)/libcore_a-protectedDagNodeSet.Tpo $(DEPDIR)/libcore_a-protectedDagNodeSet.Po
#	source='protectedDagNodeSet.cc' object='libcore_a-protectedDagNodeSet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-protectedDagNodeSet.o `test -f 'protectedDagNodeSet.cc' || echo '$(srcdir)/'`protectedDagNodeSet.cc

libcore_a-protectedDagNodeSet.obj: protectedDagNodeSet.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-protectedDagNodeSet.obj -MD -MP -MF $(DEPDIR)/libcore_a-protectedDagNodeSet.Tpo -c -o libcore_a-protectedDagNodeSet.obj `if test -f 'protectedDagNodeSet.cc'; then $(CYGPATH_W) 'protectedDagNodeSet.cc'; else $(CYGPATH_W) '$(srcdir)/protectedDagNodeSet.cc'; fi`
	mv -f $(DEPDIR)/libcore_a-protectedDagNodeSet.Tpo $(DEPDIR)/libcore_a-protectedDagNodeSet.Po
#	source='protectedDagNodeSet.cc' object='libcore_a-protectedDagNodeSet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-protectedDagNodeSet.obj `if test -f 'protectedDagNodeSet.cc'; then $(CYGPATH_W) 'protectedDagNodeSet.cc'; else $(CYGPATH_W) '$(srcdir)/protectedDagNodeSet.cc'; fi`

libcore_a-pendingUnificationStack.o: pendingUnificationStack.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-pendingUnificationStack.o -MD -MP -MF $(DEPDIR)/libcore_a-pendingUnificationStack.Tpo -c -o libcore_a-pendingUnificationStack.o `test -f 'pendingUnificationStack.cc' || echo '$(srcdir)/'`pendingUnificationStack.cc
	mv -f $(DEPDIR)/libcore_a-pendingUnificationStack.Tpo $(DEPDIR)/libcore_a-pendingUnificationStack.Po
#	source='pendingUnificationStack.cc' object='libcore_a-pendingUnificationStack.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-pendingUnificationStack.o `test -f 'pendingUnificationStack.cc' || echo '$(srcdir)/'`pendingUnificationStack.cc

libcore_a-pendingUnificationStack.obj: pendingUnificationStack.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-pendingUnificationStack.obj -MD -MP -MF $(DEPDIR)/libcore_a-pendingUnificationStack.Tpo -c -o libcore_a-pendingUnificationStack.obj `if test -f 'pendingUnificationStack.cc'; then $(CYGPATH_W) 'pendingUnificationStack.cc'; else $(CYGPATH_W) '$(srcdir)/pendingUnificationStack.cc'; fi`
	mv -f $(DEPDIR)/libcore_a-pendingUnificationStack.Tpo $(DEPDIR)/libcore_a-pendingUnificationStack.Po
#	source='pendingUnificationStack.cc' object='libcore_a-pendingUnificationStack.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-pendingUnificationStack.obj `if test -f 'pendingUnificationStack.cc'; then $(CYGPATH_W) 'pendingUnificationStack.cc'; else $(CYGPATH_W) '$(srcdir)/pendingUnificationStack.cc'; fi`

libcore_a-unificationSubproblemDisjunction.o: unificationSubproblemDisjunction.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-unificationSubproblemDisjunction.o -MD -MP -MF $(DEPDIR)/libcore_a-unificationSubproblemDisjunction.Tpo -c -o libcore_a-unificationSubproblemDisjunction.o `test -f 'unificationSubproblemDisjunction.cc' || echo '$(srcdir)/'`unificationSubproblemDisjunction.cc
	mv -f $(DEPDIR)/libcore_a-unificationSubproblemDisjunction.Tpo $(DEPDIR)/libcore_a-unificationSubproblemDisjunction.Po
#	source='unificationSubproblemDisjunction.cc' object='libcore_a-unificationSubproblemDisjunction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-unificationSubproblemDisjunction.o `test -f 'unificationSubproblemDisjunction.cc' || echo '$(srcdir)/'`unificationSubproblemDisjunction.cc

libcore_a-unificationSubproblemDisjunction.obj: unificationSubproblemDisjunction.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-unificationSubproblemDisjunction.obj -MD -MP -MF $(DEPDIR)/libcore_a-unificationSubproblemDisjunction.Tpo -c -o libcore_a-unificationSubproblemDisjunction.obj `if test -f 'unificationSubproblemDisjunction.cc'; then $(CYGPATH_W) 'unificationSubproblemDisjunction.cc'; else $(CYGPATH_W) '$(srcdir)/unificationSubproblemDisjunction.cc'; fi`
	mv -f $(DEPDIR)/libcore_a-unificationSubproblemDisjunction.Tpo $(DEPDIR)/libcore_a-unificationSubproblemDisjunction.Po
#	source='unificationSubproblemDisjunction.cc' object='libcore_a-unificationSubproblemDisjunction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-unificationSubproblemDisjunction.obj `if test -f 'unificationSubproblemDisjunction.cc'; then $(CYGPATH_W) 'unificationSubproblemDisjunction.cc'; else $(CYGPATH_W) '$(srcdir)/unificationSubproblemDisjunction.cc'; fi`

libcore_a-compoundCycleSubproblem.o: compoundCycleSubproblem.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-compoundCycleSubproblem.o -MD -MP -MF $(DEPDIR)/libcore_a-compoundCycleSubproblem.Tpo -c -o libcore_a-compoundCycleSubproblem.o `test -f 'compoundCycleSubproblem.cc' || echo '$(srcdir)/'`compoundCycleSubproblem.cc
	mv -f $(DEPDIR)/libcore_a-compoundCycleSubproblem.Tpo $(DEPDIR)/libcore_a-compoundCycleSubproblem.Po
#	source='compoundCycleSubproblem.cc' object='libcore_a-compoundCycleSubproblem.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-compoundCycleSubproblem.o `test -f 'compoundCycleSubproblem.cc' || echo '$(srcdir)/'`compoundCycleSubproblem.cc

libcore_a-compoundCycleSubproblem.obj: compoundCycleSubproblem.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcore_a-compoundCycleSubproblem.obj -MD -MP -MF $(DEPDIR)/libcore_a-compoundCycleSubproblem.Tpo -c -o libcore_a-compoundCycleSubproblem.obj `if test -f 'compoundCycleSubproblem.cc'; then $(CYGPATH_W) 'compoundCycleSubproblem.cc'; else $(CYGPATH_W) '$(srcdir)/compoundCycleSubproblem.cc'; fi`
	mv -f $(DEPDIR)/libcore_a-compoundCycleSubproblem.Tpo $(DEPDIR)/libcore_a-compoundCycleSubproblem.Po
#	source='compoundCycleSubproblem.cc' object='libcore_a-compoundCycleSubproblem.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcore_a-compoundCycleSubproblem.obj `if test -f 'compoundCycleSubproblem.cc'; then $(CYGPATH_W) 'compoundCycleSubproblem.cc'; else $(CYGPATH_W) '$(srcdir)/compoundCycleSubproblem.cc'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(HEADERS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am:

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-noinstLIBRARIES ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
